! function t(e, i, n) {
    function s(o, a) { if (!i[o]) { if (!e[o]) { var h = "function" == typeof require && require; if (!a && h) return h(o, !0); if (r) return r(o, !0); throw new Error("Cannot find module '" + o + "'") } var d = i[o] = { exports: {} };
            e[o][0].call(d.exports, function(t) { var i = e[o][1][t]; return s(i ? i : t) }, d, d.exports, t, e, i, n) } return i[o].exports } for (var r = "function" == typeof require && require, o = 0; o < n.length; o++) s(n[o]); return s }({ 1: [function(t, e, i) {
        function n() { this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0 }

        function s(t) { return "function" == typeof t }

        function r(t) { return "number" == typeof t }

        function o(t) { return "object" == typeof t && null !== t }

        function a(t) { return void 0 === t } e.exports = n, n.EventEmitter = n, n.prototype._events = void 0, n.prototype._maxListeners = void 0, n.defaultMaxListeners = 10, n.prototype.setMaxListeners = function(t) { if (!r(t) || t < 0 || isNaN(t)) throw TypeError("n must be a positive number"); return this._maxListeners = t, this }, n.prototype.emit = function(t) { var e, i, n, r, h, d; if (this._events || (this._events = {}), "error" === t && (!this._events.error || o(this._events.error) && !this._events.error.length)) { if (e = arguments[1], e instanceof Error) throw e; throw TypeError('Uncaught, unspecified "error" event.') } if (i = this._events[t], a(i)) return !1; if (s(i)) switch (arguments.length) {
                case 1:
                    i.call(this); break;
                case 2:
                    i.call(this, arguments[1]); break;
                case 3:
                    i.call(this, arguments[1], arguments[2]); break;
                default:
                    for (n = arguments.length, r = new Array(n - 1), h = 1; h < n; h++) r[h - 1] = arguments[h];
                    i.apply(this, r) } else if (o(i)) { for (n = arguments.length, r = new Array(n - 1), h = 1; h < n; h++) r[h - 1] = arguments[h]; for (d = i.slice(), n = d.length, h = 0; h < n; h++) d[h].apply(this, r) }
            return !0 }, n.prototype.addListener = function(t, e) { var i; if (!s(e)) throw TypeError("listener must be a function"); if (this._events || (this._events = {}), this._events.newListener && this.emit("newListener", t, s(e.listener) ? e.listener : e), this._events[t] ? o(this._events[t]) ? this._events[t].push(e) : this._events[t] = [this._events[t], e] : this._events[t] = e, o(this._events[t]) && !this._events[t].warned) { var i;
                i = a(this._maxListeners) ? n.defaultMaxListeners : this._maxListeners, i && i > 0 && this._events[t].length > i && (this._events[t].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[t].length), "function" == typeof console.trace && console.trace()) } return this }, n.prototype.on = n.prototype.addListener, n.prototype.once = function(t, e) {
            function i() { this.removeListener(t, i), n || (n = !0, e.apply(this, arguments)) } if (!s(e)) throw TypeError("listener must be a function"); var n = !1; return i.listener = e, this.on(t, i), this }, n.prototype.removeListener = function(t, e) { var i, n, r, a; if (!s(e)) throw TypeError("listener must be a function"); if (!this._events || !this._events[t]) return this; if (i = this._events[t], r = i.length, n = -1, i === e || s(i.listener) && i.listener === e) delete this._events[t], this._events.removeListener && this.emit("removeListener", t, e);
            else if (o(i)) { for (a = r; a-- > 0;)
                    if (i[a] === e || i[a].listener && i[a].listener === e) { n = a; break }
                if (n < 0) return this;
                1 === i.length ? (i.length = 0, delete this._events[t]) : i.splice(n, 1), this._events.removeListener && this.emit("removeListener", t, e) } return this }, n.prototype.removeAllListeners = function(t) { var e, i; if (!this._events) return this; if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[t] && delete this._events[t], this; if (0 === arguments.length) { for (e in this._events) "removeListener" !== e && this.removeAllListeners(e); return this.removeAllListeners("removeListener"), this._events = {}, this } if (i = this._events[t], s(i)) this.removeListener(t, i);
            else
                for (; i.length;) this.removeListener(t, i[i.length - 1]); return delete this._events[t], this }, n.prototype.listeners = function(t) { var e; return e = this._events && this._events[t] ? s(this._events[t]) ? [this._events[t]] : this._events[t].slice() : [] }, n.listenerCount = function(t, e) { var i; return i = t._events && t._events[e] ? s(t._events[e]) ? 1 : t._events[e].length : 0 } }, {}], 2: [function(t, e, i) { "function" == typeof Object.create ? e.exports = function(t, e) { t.super_ = e, t.prototype = Object.create(e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }) } : e.exports = function(t, e) { t.super_ = e; var i = function() {};
            i.prototype = e.prototype, t.prototype = new i, t.prototype.constructor = t } }, {}], 3: [function(t, e, i) {
        function n(t, e, i, n) { t._adformVastData = [n]; var h = n.utils;
            h && (h.visibilityTime = JSON.parse(h.visibilityTime) || o, h.visibilityArea = JSON.parse(h.visibilityArea) || a); var d = t._adform = t._adform || [];
            d.push([h.bn + ".on.setup", function(t) { var e = t.html,
                    s = r.resize(e, i, n);
                e.width = s.width, e.height = s.height, t.events.off("setup", arguments.callee), t.events.on("init", function() { var t = this.options.iframe; if (t) { r.moveToCenter(t); var e = parseInt(h.adfUnlTest, 10); if (e) var i = t.contentWindow.Adform,
                            s = i && i.lib && (s = i.lib.loadScript) && s(t.contentDocument, n.shost + "/banners/scripts/unload/adform.inscreen.js?" + i.cache, function() {}) } }) }]), s(e, n.shost) }

        function s(t, e) { var i = 1e16 * Math.random(),
                n = e + "/Banners/Scripts/banner-stub.js",
                s = document.createElement("script");
            s.setAttribute("data-adfscript", n + "?rnd=" + i), t.appendChild(s); var r = document.createElement("script");
            r.async = r.defer = !0, r.src = e + "/banners/scripts/adfscript.js?" + i, t.appendChild(r) } var r = t("./utils/resize"),
            o = 2,
            a = 50;
        e.exports = { setup: n } }, { "./utils/resize": 7 }], 4: [function(t, e, i) {
        function n(t) { return "2.0" }

        function s() { return this.options.expanded }

        function r() { return this.options.skippableState }

        function o() { return this.options.width }

        function a() { return this.options.height }

        function h() { return this.options.remainingTime }

        function d() { return this.options.duration }

        function l() { return this.options.companions }

        function u() { return this.options.icons }

        function c() { return this.options.linear }

        function p() { return this.options.volume }

        function v(t, e, i, n, s, r) { this.options.width = t, this.options.height = e, this.options.viewMode = i, this.options.desiredBitrate = n, this.slot = r.slot, this.videoSlot = r.videoSlot, this.video = this.videoSlot; var o = document.body;
            o.style.margin = 0, o.style.overflow = "hidden"; try { window.frameElement.style.border = 0 } catch (a) {} var h = s.AdParameters || s;
            this.parameters = {}; try { this.parameters = JSON.parse(h) } catch (a) { throw new Error("Error parsing creativeData.") }({ product: "vpaid", tech: "html5", bn: this.parameters.utils.bn, player: tt.getSlotAttributes(this) });
            this.callEvent("AdLoaded") }

        function f() {
            function e(t) { t ? s.callEvent("AdImpression") : s.callEvent("AdError") } var i = tt.getTargetWindow(this.slot);
            i !== window && (i.getVPAIDAd = K); var n = t("./arma-hooks");
            n.setup(i, this.slot, this.options, this.parameters), this.callEvent("AdStarted"), tt.checkRenderedFrame(this.slot, e), this.updateSlotsSize(); var s = this }

        function m(t, e) { var i = "AdClickThru";
            i in this.eventsCallbacks && this.eventsCallbacks[i](t, "adform-click", !!e) }

        function g(t) { this.callEvent("AdError", t) }

        function A() { this.callEvent("AdClickThru") }

        function b() { this.callEvent("AdInteraction") }

        function w() { this.callEvent("AdVideoFirstQuartile") }

        function y() { this.callEvent("AdVideoMidpoint") }

        function _() { this.callEvent("AdVideoThirdQuartile") }

        function E() { this.callEvent("AdVideoComplete") }

        function V() { this.callEvent("AdVideoStart") }

        function x() { this.callEvent("AdPlaying") }

        function S() { this.callEvent("AdUserClose") }

        function T() { this.callEvent("AdStopped") }

        function k() { var t = this.options.width,
                e = this.options.height,
                i = this.slot.style;
            i.width = t + "px", i.height = e + "px", this.video && (this.video.setAttribute("width", t), this.video.setAttribute("height", e)) }

        function L(t) { var e = $.findSource.call(this, t); if (!e || !e.length) throw new Error("Cannot find video source");
            this.video.setAttribute("src", e[0].file), this.video.setAttribute("type", e[0].mime), this.video.load(), C.call(this) }

        function C() { this.quartiles = ["AdVideoStart", "AdVideoFirstQuartile", "AdVideoMidpoint", "AdVideoThirdQuartile", "AdVideoComplete"]; var t = "loadedmetadata,timeupdate,playing,pause".split(",");
            this.video.videoWasPaused = !1; for (var e in t) this.video.addEventListener(t[e], I.bind(this), !1) }

        function I(t) { var e = this.video; if (e) switch (t.type) {
                case "loadedmetadata":
                    this.options.duration = e.duration, e.play(); break;
                case "timeupdate":
                    this.setAdRemainingTime(e.currentTime), P.call(this); break;
                case "playing":
                    e.videoWasPaused && this.adPlaying(); break;
                case "pause":
                    e.videoWasPaused = !0 } }

        function P() { var t = this.video.currentTime / (.25 * this.video.duration) >> 0,
                e = this.quartiles[t];
            e && (this.callEvent(e), this.quartiles[t] = null) }

        function M(t) { this.options.remainingTime = this.options.duration - t }

        function W(t) { this.options.duration = t, this.callEvent("AdDurationChange") }

        function D(t) { this.options.volume = t, this.callEvent("AdVolumeChange"), this.video.volume >= 0 && this.video.volume !== t && (this.video.volume = t) }

        function z(t, e, i) { this.options.width = t, this.options.height = e, this.options.viewMode = i, N.call(this), this.callEvent("AdSizeChange") }

        function N() { this.updateSlotsSize(); var t = window.Adform || parent.Adform; if (this.banner = t && t.adRegister[this.parameters.utils.bn], this.banner) { var e = this.banner.settings.html;
                this.bannerWidth = e.width, this.bannerHeight = e.height; var i = Z.resize(e, this.options, this.parameters);
                this.bannerWidth = i.width, this.bannerHeight = i.height, R.call(this) } }

        function R(t, e) { var i = "width:" + this.bannerWidth + "px!important; height:" + this.bannerHeight + "px!important;",
                n = this.banner.adBox;
            n.css(i), n.css(".adform-adbox", i), n.css(".adform-content", i), n.css("iframe", i); var s = this.banner.options.iframe;
            s && (s.setAttribute("style", i), Z.moveToCenter(s)) }

        function O() { this.video.pause(), this.callEvent("AdPaused") }

        function Q() { this.video.play(), this.callEvent("AdResumed") }

        function j() { this.options.expanded = !0, this.callEvent("AdExpandedChange") }

        function q() { this.options.expanded = !1 }

        function U() { var t = this.options.skippableState;
            t && this.callEvent("AdSkipped") }

        function F(t, e, i) { var n = t.bind(i);
            this.eventsCallbacks[e] = n }

        function B(t) { this.eventsCallbacks[t] = null }

        function H(t) { t in this.eventsCallbacks ? (this.eventsCallbacks[t](), this.emit(t), J("log", "AdformVpaidWrapper: event called: " + t)) : J("warn", "AdformVpaidWrapper: event skipped: " + t) }

        function J(t, e) { try { window.top.Adform.LP ? parent.window.console[t](e) : console[t](e) } catch (i) {} }

        function G(t) { var e = { 34: function() { this.setAdVolume(0) }, 33: function() { this.setAdVolume(1) }, 23: function() { this.skipAd(), this.stopAd(), this.adUserClose() }, 25: this.adVideoStart, 26: this.adVideoFirstQuartile, 27: this.adVideoMidpoint, 28: this.adVideoThirdQuartile, 29: this.adVideoComplete, 30: this.adPlaying, 31: this.pauseAd, 37: this.resumeAd, 32: this.stopAd },
                i = e[t]; return "function" == typeof i ? (i.call(this), !0) : (J("warn", "No handler for event (ID = " + t + ") is defined."), !1) }

        function K() { return et.getInstance() } var X = t("inherits"),
            Y = t("events").EventEmitter,
            Z = t("./utils/resize"),
            $ = t("./utils/video"),
            tt = t("./utils/dom"),
            et = (t("./utils/log"), function() { return this.slot = null, this.videoSlot = null, this.eventsCallbacks = {}, this.parameters = {}, this.options = { companions: "", desiredBitrate: -1, duration: -1, expanded: !1, width: 0, height: 0, icons: "", linear: !0, remainingTime: 0, skippableState: !0, viewMode: "normal", volume: 1 }, Y.call(this), this });
        X(et, Y); var it = et.prototype;
        it.getAdWidth = o, it.getAdHeight = a, it.getAdVolume = p, it.getAdIcons = u, it.getAdLinear = c, it.getAdDuration = d, it.getAdCompanions = l, it.getAdExpanded = s, it.getAdSkippableState = r, it.getAdRemainingTime = h, it.handshakeVersion = n, it.adError = g, it.initAd = v, it.subscribe = F, it.unsubscribe = B, it.callEvent = H, it.callDHTMLEvent = G, it.bindVideo = L, it.adClick = m, it.overlayOnClick = A, it.adInteraction = b, it.adVideoFirstQuartile = w, it.adVideoMidpoint = y, it.adVideoThirdQuartile = _, it.adVideoComplete = E, it.adVideoStart = V, it.adPlaying = x, it.adUserClose = S, it.updateSlotsSize = k, it.startAd = f, it.stopAd = T, it.skipAd = U, it.resizeAd = z, it.pauseAd = O, it.resumeAd = Q, it.expandAd = j, it.setAdVolume = D, it.setAdDuration = W, it.setAdRemainingTime = M, it.collapseAd = q, et.getInstance = function() { return window.__adformVPAIDWrapperInstance || (window.__adformVPAIDWrapperInstance = new et), window.__adformVPAIDWrapperInstance }, window.getVPAIDAd = K }, { "./arma-hooks": 3, "./utils/dom": 5, "./utils/log": 6, "./utils/resize": 7, "./utils/video": 8, events: 1, inherits: 2 }], 5: [function(t, e, i) {
        function n(t) { var e; try { e = t.ownerDocument.defaultView } catch (i) {} return e || window }

        function s(t, e) {
            function i(t) { try { var i = t[0].contentWindow.document;
                    i && e(!0) } catch (n) { e(!1) } } var n = 0,
                s = setInterval(function() {++n; var r = t.getElementsByTagName("iframe");
                    r && r.length && (clearInterval(s), i(r)), n > 50 && (e(!1), clearInterval(s)) }, 200) }

        function r(t) { var e = t.videoSlot.className || t.slot.className || t.videoSlot.id || t.slot.id; return e } e.exports = { getTargetWindow: n, checkRenderedFrame: s, getSlotAttributes: r } }, {}], 6: [function(t, e, i) {
        function n(t, e) { var i = t + "/jslog/?src=video&msg=";
            Math.random() < 1 && ((new Image).src = i + encodeURIComponent(JSON.stringify(e))) } e.exports = n }, {}], 7: [function(t, e, i) {
        function n(t, e, i) { var n = e.width,
                s = e.height,
                r = t.width,
                o = t.height,
                a = n / r,
                h = s / o,
                d = Math.min(a, h); return i.scalable && (i.maintainAspectRatio ? (r *= d, o *= d) : (r = n, o = s)), { width: r, height: o } }

        function s(t) { var e = t.style;
            e.position = "absolute", e.top = e.left = "50%", ["transform", "OTransform", "msTransform", "MozTransform", "webkitTransform"].forEach(function(t) { e[t] = "translate(-50%, -50%)" }) } e.exports = { resize: n, moveToCenter: s } }, {}], 8: [function(t, e, i) {
        function n(t) { if (this.video.canPlayType) { var e = this; return t.map(function(t, i) { var n = t.mime || r(t.file),
                        s = e.video.canPlayType(n); if ("" !== s) return t.mime = n, t }).filter(function(t) { return !!t }) } return t }

        function s(t) { return t && t.split("?").shift().split(".").pop() }

        function r(t) { var e = s(t),
                i = { ogv: "ogg" },
                n = e in i ? i[e] : e; return "video/" + n } e.exports = { findSource: n } }, {}] }, {}, [4]);